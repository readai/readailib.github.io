<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Comment on ReadAILib Official Website </title>
    <link>/categories/comment/</link>
    <description>Recent content in Comment on ReadAILib Official Website </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/comment/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>单变量线性回归</title>
      <link>/2017/12/21/single-variable-linear-regression/</link>
      <pubDate>Thu, 21 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/12/21/single-variable-linear-regression/</guid>
      <description>该笔记是来自 Andrew Ng 的 Machine Learning 课程的第二周:单变量线性回归的课堂记录，主要讲解了以下几个内容:
代价函数梯度下降算法模型表达还是上一个关于房屋价格预测的例子，给你一组房屋的大小和对应房屋的价格的数据，让你对数据进行建模，使得对于其他的房屋的大小更好的拟合出更准确的价格出来。如图1所示。图 1: 房屋价格预测模型题外话：首先数据是一组关于标准输入与标准答案的数据集，那么对该数据进行建模，是属于监督学习任务。又因为数据只含有一个变量（\(size\)）即一个特征，且找到一条直线来拟合数据集，所以该问题又被称为单变量线性回归问题。
图2是部分的样本数据，其中\(X\)表示房屋的大小，\(Y\)表示对应房屋的价格。图 2: 数据为了后面更好的描述，所以对一些符号进行声明：
\(m\) 训练集中实例的数量\(x&amp;#39;s\) 输入变量或者特征\(y&amp;#39;s\) 输出变量或目标变量\((x,y)\) 一个训练样本\((x^{(i)},y^{(i)})\) 第\(i\)个训练样本 \end{itemize}有了数据之后，可以用下图就可以描述房屋价格预测问题建模的过程。图 3: 建模的过程图片描述：因而解决房屋价格预测问题，实际上就是要将训练集”喂给“我们的学习算法，进而学习到一个假设\(h\)，然后将要预测的房屋尺寸作为输入变量输入给\(h\)，预测出该房屋的交易价格作为输出结果。其实\(h\)就是一个我们要学习的函数。
我们如何表示函数呢？对于单变量线性回归问题来说，\(h_{\theta}(x) = \theta_{0} + \theta_{1} x\).
代价函数引入代价函数有了训练数据，也有了模型的表示\(h\)，但是问题是如何选择 \(\theta_{0}\) 和 \(\theta_{1}\) ?
基本想法是选择\(\theta_{0}\)，\(\theta_{1}\)以使得在训练集上\(h_{\theta}(x)\)接近\(y\).用数学表达式表示出来，如下： \[minimize_{\theta{0},\theta_{1}}\frac{1}{2m}\sum_{i=1}^{m}(h_{\theta}(x^{(i)})- y^{(i)})^{2}\]
注意： 在学习的时候，有一个区别，\(loss function\)描述的是单个样本误差，而\(cost\) \(function\)描述整个训练集的误差。
同样地，为了更好的下文描述，将其简化：
\[J(\theta_{0},\theta_{1}) = \frac{1}{2m}\sum_{i=1}^{m}(h_{\theta}(x^{(i)})- y^{(i)})^{2}\]</description>
    </item>
    
    <item>
      <title>Display Image Using R</title>
      <link>/2017/12/19/display-image-using-r/</link>
      <pubDate>Tue, 19 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/12/19/display-image-using-r/</guid>
      <description>{r fig-margin, echo=FALSE, fig.cap=&amp;quot;这是一个神经网络的图。&amp;quot;, fig.height=3.5, fig.margin=TRUE, warning=FALSE, background=&amp;quot;#f5f5d5&amp;quot;, cache=FALSE}# need png packagelibrary(png)#Replace the directory and file information with your infoima &amp;lt;- readPNG(&amp;quot;C:\\Users\\Shine\\Desktop\\readailib\\themes\\hugo-lithium-theme\\static\\images\\logo.png&amp;quot;)grid::grid.raster(ima)Figure 1: 这是一个神经网络的图。</description>
    </item>
    
    <item>
      <title>为我的博客安装评论插件</title>
      <link>/2017/12/14/add-comment-to-your-blog/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/12/14/add-comment-to-your-blog/</guid>
      <description>今天尝试了一下不同得评论系统，现在将我设置评论系统的安装方法以及设置步骤总结出来，分享给大家.
1.Disqusdisqus是一个支持多社交账号和自家的账号的评论插件，是一个广泛使用的评论插件，主要依赖于你必须要在disqus进行设置。但是墙内的用户无法使用，这是比较不方便的地方。
首先需要创建并设置disqus，进入管理界面，按照图1进行填写.
图1 填写要求填写完成之后，点击Create Site按钮，就可以进行下一步配置.
图2 配置要求说明填写完成后，就可以点击Complete Setup，完成配置，但是重要的一点不要忘记是，必须要记住disqusShortname，那你可以通过下面的方式进行查询，比如
图3 disqusShortname查看方式完成之后，就可以在blogdown里面的config.toml中进行配置了，
disqusShortname = &amp;quot;readailib&amp;quot;然后就可以启用了.效果如下
图4 disqus效果2.gitment首先Register a new OAuth application，填写要求
图5 Register a new OAuth application Principle注册完成之后会返回下面的画面，记住client_id 和 client_secret就行了。
图6 记住client_id 和 client_secret然后在 themes\hugo-lithium-theme\layouts\partials文件中添加一个新的文件gitment.html，文件内容如下
&amp;lt;div id=&amp;quot;container&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://imsun.github.io/gitment/style/default.css&amp;quot;&amp;gt;&amp;lt;script src=&amp;quot;https://imsun.github.io/gitment/dist/gitment.browser.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;var gitment = new Gitment({id: &amp;#39;location.href&amp;#39;, // owner: &amp;#39;rh01&amp;#39;,repo: &amp;#39;readailib&amp;#39;,oauth: {client_id: &amp;#39;3724d1f38c45d652612b&amp;#39;,client_secret: &amp;#39;cc24fc9ed88bf9eddd44f1319a7056e5d8690d12&amp;#39;,},})gitment.</description>
    </item>
    
  </channel>
</rss>